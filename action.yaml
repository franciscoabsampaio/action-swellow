name: "Run Swellow CLI"
description: "Run the Swellow CLI seamlessly in your GitHub Actions workflow."
author: "Francisco A. B. Sampaio"

branding:
  icon: "database"
  color: "blue"

inputs:
  command:
    description: "Swellow command to execute (e.g., up, down)"
    required: true
    default: "up"
  connection-string:
    description: "Database connection string"
    required: true
    default: ""
  migrations-directory:
    description: "Directory containing migration files"
    required: false
    default: "./migrations"
  args:
    description: "Additional arguments to pass to the Swellow command"
    required: false
    default: ""
  version:
    description: "Version of the binary to download (GitHub release tag)."
    required: true
    default: "latest"
  verbose:
    description: "Enable verbose output."
    required: false
    default: "false"
runs:
  using: "composite"
  steps:
    - name: Resolve release version
      id: resolve_version
      shell: bash
      run: |
        set -euo pipefail
        repo="franciscoabsampaio/swellow"
        # Get the version from the latest branch
        if [ "${{ inputs.version }}" = "latest" ]; then
          resolved=$(curl -s "https://api.github.com/repos/${repo}/releases/latest" \
            | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')

          # Fail if the resolved version is null
          if [ -z "$resolved" ] || [ "$resolved" = "null" ]; then
            echo "❌ Could not resolve latest release"
            exit 1
          fi
          echo "Resolved version: $resolved"
          echo "version=$resolved" >> $GITHUB_OUTPUT
        else
          echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT
        fi

    - name: Determine platform
      id: platform
      shell: bash
      run: |
        case "${{ runner.os }}" in
          Linux)
            target="x86_64-unknown-linux-gnu"
            ext="tar.gz"
            ;;
          macOS)
            target="aarch64-apple-darwin"
            ext="tar.gz"
            ;;
          Windows)
            target="x86_64-pc-windows-msvc"
            ext="zip"
            ;;
          *)
            echo "Unsupported OS: ${{ runner.os }}"
            exit 1
            ;;
        esac
        echo "target=$target" >> $GITHUB_OUTPUT
        echo "ext=$ext" >> $GITHUB_OUTPUT

    - name: Download release asset
      shell: bash
      run: |
        set -euo pipefail
        version="${{ steps.resolve_version.outputs.version }}"
        target="${{ steps.platform.outputs.target }}"
        ext="${{ steps.platform.outputs.ext }}"
        repo="franciscoabsampaio/swellow"

        asset="release-binary-${target}.${ext}"
        url="https://github.com/${repo}/releases/download/${version}/${asset}"

        echo "Downloading $url"
        curl -L "$url" -o "swellow.${ext}"

    - name: Extract binary
      shell: bash
      run: |
        ext="${{ steps.platform.outputs.ext }}"
        if [ "$ext" = "zip" ]; then
          unzip -o swellow.zip
        else
          tar -xzf swellow.tar.gz
        fi

        chmod +x swellow* || true

    - name: Run Swellow Command
      shell: bash
      run: |
        ./swellow \
          --db ${{ inputs.connection-string }} \
          --dir ${{ inputs.migrations-directory }} \
          $([[ "${{ inputs.verbose }}" == "true" ]] && echo "-v" || echo "") \
          ${{ inputs.command }}